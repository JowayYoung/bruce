var x=this&&this.__awaiter||function(t,e,s,n){return new(s||(s=Promise))((function(o,r){function i(t){try{u(n.next(t))}catch(t){r(t)}}function l(t){try{u(n.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(i,l)}u((n=n.apply(t,e||[])).next())}))};import{readFileSync as tt,unlinkSync as et,writeFileSync as st}from"node:fs";import{extname as nt}from"node:path";import{pathToFileURL as ot}from"node:url";import{IsEmptyArray as rt,IsEmptyObject as J,ReadJson as p,ReadYaml as it,NodeType as lt,AbsPath as E}from"@yangzw/bruce-us/dist/node.js";import ut from"typescript";import{BROWSERS_ES6 as ce,JudgeFile as L}from"../utils/index.js";const{ModuleKind:ct,ScriptTarget:ft,transpileModule:at}=ut;export default function W(){return x(this,void 0,void 0,(function*(){var t,e;const s="windows"===lt().system,n=L("","configFile"),o=s?ot(n).href:n,r=nt(o).replace(/^\./,"");let i={};const l=i;if("js"===r)i=(yield import(o)).default||{};else if("json"===r)i=null!==(t=p("brucerc.json"))&&void 0!==t?t:{};else if("ts"===r){const t=E("brucerc.ts"),e=tt(t,"utf8"),n=E("brucerc.bu.js"),o=s?ot(n).href:n,r=at(e,{compilerOptions:{module:ct.ESNext,target:ft.ESNext}}).outputText;st(n,r,"utf8"),i=(yield import(o)).default||{},et(n)}else"yaml"===r&&(i=null!==(e=it("brucerc.yaml"))&&void 0!==e?e:{});if(!J(i))for(const t in i){const e=t,s=i[e];!s||rt(s)||J(s)||(l[e]=s)}return Object.assign({alias:{},browsers:ce,buildError:null,buildSuccess:null,copyFiles:[],eslintIgnores:[],eslintRules:{},frame:"js",linkAssets:[],openPages:[],proxy:{},proxyHost:"",publicPath:"",scriptAssets:[],style:"scss",stylelintIgnores:[],stylelintRules:{},transpileDeps:[],useTs:!1},l)}))}