#!/usr/bin/env node
import{dirname as g}from"path";import{argv as Co,exit as Ho,version as No}from"process";import{fileURLToPath as h}from"url";import{ReadJson as l}from"@yangzw/bruce-us/dist/node.js";import{Command as Oo}from"commander/esm.mjs";import Vo from"semver";import Ao from"update-notifier";import{ACTION_TEXT as D,CMD_TEXT as ho}from"./constants/i18n/index.js";import{AutoBin as tt,ShowMsg as it}from"./constants/util/index.js";const Do=g(h(import.meta.url)),Eo=l("./package.json",Do);Ao({pkg:Eo}).notify(),(async()=>{if(Vo.lt(No,"v16.0.0"))return it("red",ho.judgeNodeVer),Ho(1);const o=g(h(import.meta.url)),i=new Oo,e=l("./package.json",o);Ao({pkg:e}).notify(),i.name(ho.name).usage("<command>").description(ho.desc).version(ho.version(e.version),"-v, --version",D.version).helpOption("-h, --help",D.help).addHelpCommand(!1),i.command("build").alias("b").description(D.build).action((()=>tt("build"))),i.command("init").alias("i").description(D.init).action((()=>tt("init"))),i.command("locale").alias("l").description(D.locale).action((()=>tt("locale"))),i.command("new").alias("n").description(D.new).action((()=>tt("new"))),i.command("remove").alias("r").description(D.remove).action((()=>tt("remove"))),i.parse(Co)})();