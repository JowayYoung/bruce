import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as d,c as h,b as c,w as t,e,d as l,a,o as g}from"./app-BZ5TG66e.js";const m={},p=a('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>代码规范在前端工程化实践中扮演着非常重要的角色，它主要用于约束团队成员的编码规范和编码风格，使用代码规范有这些好处。</p><ul><li>强制规范团队的编码规范和编码风格，使新旧成员的编码习惯保持一致，有利于项目的维护和扩展</li><li>提高项目代码的可维护性和可接入性，让新成员能够快速适应项目的架构和需求，降低项目的学习成本</li><li>保障项目的整体质量，减少<code>无用代码</code>、<code>重复代码</code>、<code>错误代码</code>和<code>漏洞代码</code>的产生几率，提高项目的稳定性和安全性</li></ul><p>为了实现这些目标，代码校验工具起到非常重要的作用。众所周知，几乎所有编辑器都能配置代码校验工具检测代码中的错误和漏洞，根据提供的修复方案格输出正确的代码，使得代码更加严谨。</p><p>通过使用代码校验工具，开发人员可以轻松地遵循代码规范，在编码时也能避免常见的错误和漏洞，以便提高项目的代码质量和开发效率。</p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><img src="https://img.shields.io/badge/@yangzw/bruce--std-集成代码校验的VSCode配置工具-66f.svg" alt="bruce-std" loading="lazy"></p><p><code>@yangzw/bruce-std</code>是一个集成代码校验的VSCode配置工具，配合VSCode插件为用户提供前端文件的代码校验、代码修复和错误提示的功能。一条命令就能一次生成<code>stylelint + eslint + commitlint + prettier + editorconfig</code>的全局配置，正真做到配置一体化处理，使得项目完全脱离这些繁琐配置的影响。</p><p>它的主要作用是约束团队成员的编码规范和编码风格，以便提高项目代码的可维护性和可接入性，保障项目的整体质量，减少无用代码、重复代码、错误代码和漏洞代码的产生几率。它的根本目的是通过<strong>一次部署全局运行</strong>，统一所有项目的编码规范和编码风格，帮助开发人员养成规范的码字习惯，减少不必要的错误和漏洞，提高项目的代码质量和开发效率。</p><p>在全局环境中使用它，开发人员可以轻松地进行代码校验，避免常见的错误和漏洞，在编码时遵循统一的编码规范和编码风格。这样不仅可以提高代码的可读性和可维护性，还能降低项目的学习成本和维护成本，使得团队协作更加高效顺畅。</p><p><img src="https://img.shields.io/badge/author-JowayYoung-f66.svg" alt="author" loading="lazy"><img src="https://img.shields.io/badge/version-1.3.3-f66.svg" alt="version" loading="lazy"><img src="https://img.shields.io/badge/node-&gt;%3D18.18.0-3c9.svg" alt="node" loading="lazy"><img src="https://img.shields.io/badge/npm-&gt;%3D9.8.1-3c9.svg" alt="npm" loading="lazy"><img src="https://img.shields.io/badge/test-passing-f90.svg" alt="test" loading="lazy"><img src="https://img.shields.io/badge/build-passing-f90.svg" alt="build" loading="lazy"><img src="https://img.shields.io/badge/coverage-mostly-09f.svg" alt="coverage" loading="lazy"><img src="https://img.shields.io/badge/license-MIT-09f.svg" alt="license" loading="lazy"></p><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖"><span>依赖</span></a></h2><p><code>@yangzw/bruce-std</code>依赖多个核心Npm模块的最新版本。</p><p><img src="https://img.shields.io/npm/v/postcss?label=postcss&amp;color=3c9" alt="postcss" loading="lazy"><img src="https://img.shields.io/npm/v/%40babel%2Fcore?label=babel&amp;color=3c9" alt="babel" loading="lazy"><img src="https://img.shields.io/npm/v/typescript?label=typescript&amp;color=3c9" alt="typescript" loading="lazy"><img src="https://img.shields.io/npm/v/prettier?label=prettier&amp;color=3c9" alt="prettier" loading="lazy"><img src="https://img.shields.io/npm/v/stylelint?label=stylelint&amp;color=3c9" alt="stylelint" loading="lazy"><img src="https://img.shields.io/npm/v/eslint?label=eslint&amp;color=3c9" alt="eslint" loading="lazy"><img src="https://img.shields.io/npm/v/%40typescript-eslint%2Fparser?label=typescript-eslint&amp;color=3c9" alt="typescript-eslint" loading="lazy"><img src="https://img.shields.io/npm/v/markdownlint?label=markdownlint&amp;color=3c9" alt="markdownlint" loading="lazy"><img src="https://img.shields.io/npm/v/commitlint?label=commitlint&amp;color=3c9" alt="commitlint" loading="lazy"><img src="https://img.shields.io/npm/v/commitizen?label=commitizen&amp;color=3c9" alt="commitizen" loading="lazy"><img src="https://img.shields.io/npm/v/editorconfig?label=editorconfig&amp;color=3c9" alt="editorconfig" loading="lazy"></p><p>为了方便表达，统一这些名词。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 后续提及的<code>Prettier</code>、<code>Stylelint</code>、<code>Eslint</code>和<code>Markdownlint</code>都是表示VSCode插件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 后续提及的<code>prettier</code>、<code>stylelint</code>、<code>eslint</code>和<code>markdownlint</code>都是表示Npm模块</label></li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>使用<code>npm/yarn/pnpm</code>安装<code>@yangzw/bruce-std</code>。</p>',18),k=e("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[e("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"npm"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," i"),e("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -g"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," @yangzw/bruce-std")])])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),b=e("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[e("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"yarn"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," global"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," @yangzw/bruce-std")])])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),y=e("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[e("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pnpm"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," i"),e("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -g"),e("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," @yangzw/bruce-std")])])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),u=a('<p>使用VSCode安装<code>Beautify/Prettier/Stylelint/Eslint/Markdownlint/Editorconfig</code>。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"><strong><a href="https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify" target="_blank" rel="noopener noreferrer">Beautify</a></strong>：美化HTML/CSS/JS类型文件(作为Prettier的辅助)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"><strong><a href="https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig" target="_blank" rel="noopener noreferrer">Editorconfig</a></strong>：统一编码风格</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"><strong><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener noreferrer">Eslint</a></strong>：校验JS类型文件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"><strong><a href="https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint" target="_blank" rel="noopener noreferrer">Markdownlint</a></strong>：校验MD类型文件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"><strong><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noopener noreferrer">Prettier</a></strong>：美化所有类型文件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"><strong><a href="https://marketplace.visualstudio.com/items?itemName=stylelint.vscode-stylelint" target="_blank" rel="noopener noreferrer">Stylelint</a></strong>：校验CSS类型文件</label></li></ul><p>考虑到<code>prettier</code>比较固执，只在<code>stylelint</code>中集成<code>prettier</code>，暂未在<code>eslint</code>中集成<code>prettier</code>，而<code>eslint</code>提供的美化功能同样非常厉害。另外，<code>prettier</code>还能美化其它格式的文件，但是排除<code>json/md文件</code>在外。</p><p>在某些时候<code>Prettier</code>真的非常别扭和执着，所以使用<code>Beautify</code>代替它美化<code>html/json文件</code>。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:center;">命令</th><th style="text-align:center;">缩写</th><th style="text-align:center;">范围</th><th style="text-align:center;">使用</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center;">复制配置</td><td style="text-align:center;"><strong>bruce-std copy</strong></td><td style="text-align:center;"><code>bruce-std c</code></td><td style="text-align:center;"><code>Beautify/Prettier</code><br><code>Stylelint/Eslint/Markdownlint</code></td><td style="text-align:center;">全局</td><td>打开<code>settings.json</code>粘贴配置</td></tr><tr><td style="text-align:center;">初始配置</td><td style="text-align:center;"><strong>bruce-std init</strong></td><td style="text-align:center;"><code>bruce-std i</code></td><td style="text-align:center;"><code>Commitlint/Editorconfig</code></td><td style="text-align:center;">局部</td><td>自动将配置写入<code>package.json</code><br>自动生成<code>.editorconfig</code>和<code>czrc.cjs</code></td></tr><tr><td style="text-align:center;">更新配置</td><td style="text-align:center;"><strong>bruce-std update</strong></td><td style="text-align:center;"><code>bruce-std u</code></td><td style="text-align:center;"><code>Beautify/Prettier</code><br><code>Stylelint/Eslint/Markdownlint</code></td><td style="text-align:center;">全局</td><td>自动将配置写入<code>settings.json</code></td></tr></tbody></table>',6),v=a("<li><code>bruce-std c</code>和<code>bruce-std u</code>用于配置<code>Beautify/Prettier/Stylelint/Eslint/Markdownlint</code></li><li><code>bruce-std i</code>用于配置<code>Commitlint/Editorconfig</code></li><li><code>bruce-std c</code>会抛出<code>settings.json</code>的文件路径，在CMD工具中可以直接打开文件</li><li><code>bruce-std u</code>会覆写<code>settings.json</code>，导致原来文件中存在的注释会被清除，<strong>慎用</strong></li>",4),f=a('<table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:center;">命令</th><th style="text-align:center;">缩写</th></tr></thead><tbody><tr><td style="text-align:center;">帮助信息</td><td style="text-align:center;"><strong>bruce-std --help</strong></td><td style="text-align:center;"><code>bruce-std -h</code></td></tr><tr><td style="text-align:center;">版本信息</td><td style="text-align:center;"><strong>bruce-std --version</strong></td><td style="text-align:center;"><code>bruce-std -v</code></td></tr></tbody></table><hr><p>因为这些代码校验工具各自的特殊性，<code>@yangzw/bruce-std</code>分别对<code>Beautify/Prettier/Stylelint/Eslint/Markdownlint</code>和<code>Commitlint/Editorconfig</code>做针对性的处理。</p><ul><li>对<code>Beautify/Prettier/Stylelint/Eslint/Markdownlint</code>做成全局统一配置，执行<code>bruce-std c</code>或<code>bruce-std u</code>在VSCode的<code>settings.json</code>中生成全局配置</li><li>对<code>Commitlint/Editorconfig</code>做成项目单一配置，执行<code>bruce-std i</code>在项目目录<code>package.json</code>中生成局部配置，同时生成<code>.editorconfig</code>和<code>czrc.cjs</code></li></ul><p>总之，第一条注意事项只需执行一次就能全局生效，第二条注意事项需要在每个项目中执行一次才能正常生效。</p>',5);function x(_,z){const o=d("CodeTabs"),n=d("RouteLink");return g(),h("div",null,[p,c(o,{id:"77",data:[{id:"npm"},{id:"yarn"},{id:"pnpm"}],"tab-id":"shell"},{title0:t(({value:i,isActive:s})=>[l("npm")]),title1:t(({value:i,isActive:s})=>[l("yarn")]),title2:t(({value:i,isActive:s})=>[l("pnpm")]),tab0:t(({value:i,isActive:s})=>[k]),tab1:t(({value:i,isActive:s})=>[b]),tab2:t(({value:i,isActive:s})=>[y]),_:1}),u,e("ul",null,[v,e("li",null,[l("手动配置可能比较保险，具体操作请查看"),c(n,{to:"/std/config.html"},{default:t(()=>[l("配置")]),_:1})])]),f])}const C=r(m,[["render",x],["__file","index.html.vue"]]),F=JSON.parse('{"path":"/std/","title":"指南","lang":"zh-CN","frontmatter":{"title":"指南","icon":"lightbulb","order":1},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"依赖","slug":"依赖","link":"#依赖","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]}],"git":{"createdTime":1722581655000,"updatedTime":1722581655000,"contributors":[{"name":"JowayYoung","email":"young.joway@aliyun.com","commits":1}]},"readingTime":{"minutes":4.83,"words":1449},"filePathRelative":"std/index.md","localizedDate":"2024年8月2日"}');export{C as comp,F as data};
