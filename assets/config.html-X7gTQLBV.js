import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as c,c as p,a as t,b as n,d as e,e as a}from"./app-3a79YZRO.js";const r={},i=a('<h2 id="命令交互" tabindex="-1"><a class="header-anchor" href="#命令交互" aria-hidden="true">#</a> 命令交互</h2><p>命令交互生成的配置会保存到终端内存中，当命令执行之后会被回收。</p><blockquote><p>📦 构建应用 <strong>bruce-app build</strong> / <strong>bruce-app b</strong></p></blockquote><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">功能</th><th style="text-align:center;">默认</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>mode</strong></td><td style="text-align:center;">请选择环境模式</td><td style="text-align:center;"><code>prod</code></td><td>可选<code>test/pre/prod</code></td></tr><tr><td style="text-align:center;"><strong>polyfill</strong></td><td style="text-align:center;">请选择代码垫片</td><td style="text-align:center;"><code>es6</code></td><td>可选<code>es5/es6/custom/dynamic</code></td></tr><tr><td style="text-align:center;"><strong>useCsslint</strong></td><td style="text-align:center;">请确认是否校验样式代码</td><td style="text-align:center;"><code>false</code></td><td>保障应用整体样式代码的质量，<code>建议开启</code></td></tr><tr><td style="text-align:center;"><strong>useJslint</strong></td><td style="text-align:center;">请确认是否校验脚本代码</td><td style="text-align:center;"><code>false</code></td><td>保障应用整体脚本代码的质量，<code>建议开启</code></td></tr><tr><td style="text-align:center;"><strong>useCompressor</strong></td><td style="text-align:center;">请确认是否压缩文件数据</td><td style="text-align:center;"><code>false</code></td><td>生成压缩文件，上传到服务器之后可以提供<code>Gzip</code>功能</td></tr><tr><td style="text-align:center;"><strong>useHash</strong></td><td style="text-align:center;">请确认是否哈希文件名称</td><td style="text-align:center;"><code>false</code></td><td>对生成文件设置哈希值，只有文件内容修改才会更新哈希值，用于长缓存优化</td></tr><tr><td style="text-align:center;"><strong>useTimer</strong></td><td style="text-align:center;">请确认是否时化应用目录</td><td style="text-align:center;"><code>false</code></td><td>时间序列化命名输出的应用根目录，增加时间戳区分版本</td></tr><tr><td style="text-align:center;"><strong>useAnalyzer</strong></td><td style="text-align:center;">请确认是否分析打包结果</td><td style="text-align:center;"><code>false</code></td><td>在构建之后展示构建依赖的关系，可以根据关系图合理分析模块</td></tr></tbody></table><ul><li><code>mode</code>配置提供<code>test测试环境</code>、<code>pre预览环境</code>和<code>prod生产环境</code>，在<code>js/ts/jsx/tsx</code>文件中可以使用全局变量<code>RUN_ENV</code>来获取<code>mode</code>的具值</li><li><code>polyfill</code>配置提供<code>es5 ES5静态垫片</code>、<code>es6 ES6静态垫片</code>、<code>custom自定义静态垫片</code>和<code>dynamic动态垫片</code><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"><strong>自定义静态垫片</strong>：根据业务代码引入，兼容所有自定义范围的浏览器</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"><strong>动态垫片</strong>：根据<code>UserAgent</code>引入，使用Polyfill服务</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"><strong>ES5静态垫片</strong>：根据业务代码引入，兼容所有ES5下限范围的浏览器</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"><strong>ES6静态垫片</strong>：根据业务代码引入，兼容所有ES6下限范围的浏览器</label></li></ul></li></ul><blockquote><p>♾️ 创建应用 <strong>bruce-app create</strong> / <strong>bruce-app c</strong></p></blockquote><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">功能</th><th style="text-align:center;">默认</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>frame</strong></td><td style="text-align:center;">请选择开发框架</td><td style="text-align:center;"><code>js</code></td><td>可选<code>js/react</code></td></tr><tr><td style="text-align:center;"><strong>appName</strong></td><td style="text-align:center;">请输入应用名称</td><td style="text-align:center;"><code>unknown</code></td><td>只能由数字、字母或中划线组成且首末位字符只能为数字或字母</td></tr><tr><td style="text-align:center;"><strong>style</strong></td><td style="text-align:center;">请选择预设样式</td><td style="text-align:center;"><code>scss</code></td><td>可选<code>scss/less</code></td></tr><tr><td style="text-align:center;"><strong>deps</strong></td><td style="text-align:center;">请选择应用依赖</td><td style="text-align:center;"><code>[]</code></td><td>提供<code>js/react</code>相关开发依赖，可选通用设计、通用工具、页面路由、状态管理和网络请求</td></tr><tr><td style="text-align:center;"><strong>useTs</strong></td><td style="text-align:center;">请确认是否集成TypeScript</td><td style="text-align:center;"><code>false</code></td><td>生成<code>tsconfig.json</code>，可以使用TS开发项目</td></tr><tr><td style="text-align:center;"><strong>useInstaller</strong></td><td style="text-align:center;">请确认是否安装应用依赖</td><td style="text-align:center;"><code>false</code></td><td>默认使用<code>yarn</code>安装，其次使用<code>npm</code>安装</td></tr><tr><td style="text-align:center;"><strong>ext</strong></td><td style="text-align:center;">请选择配置后缀</td><td style="text-align:center;"><code>js/ts</code></td><td>可选<code>js/json/ts/yaml</code></td></tr></tbody></table><ul><li><code>ext</code>配置提供<code>js</code>、<code>json</code>、<code>ts</code>和<code>yaml</code>的后缀，使用TS时会将<code>js</code>变为<code>ts</code>，动态配置建议使用<code>js/ts</code>，静态配置建议使用<code>json/yaml</code></li></ul><blockquote><p>🕹️ 调试应用 <strong>bruce-app dev</strong> / <strong>bruce-app d</strong></p></blockquote><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">功能</th><th style="text-align:center;">默认</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>port</strong></td><td style="text-align:center;">请输入调试端口</td><td style="text-align:center;"><code>9999</code></td><td>只能由正整数组成且范围在<code>0~65535</code>之间，会检测端口是否被占用</td></tr><tr><td style="text-align:center;"><strong>useHttps</strong></td><td style="text-align:center;">请确认是否开启证书服务</td><td style="text-align:center;"><code>false</code></td><td>调试基于<code>Cookies</code>的登录功能时必须开启此项</td></tr><tr><td style="text-align:center;"><strong>useCsslint</strong></td><td style="text-align:center;">请确认是否校验样式代码</td><td style="text-align:center;"><code>false</code></td><td>保障应用整体样式代码的质量，<code>建议开启</code></td></tr><tr><td style="text-align:center;"><strong>useJslint</strong></td><td style="text-align:center;">请确认是否校验脚本代码</td><td style="text-align:center;"><code>false</code></td><td>保障应用整体脚本代码的质量，<code>建议开启</code></td></tr><tr><td style="text-align:center;"><strong>useOpener</strong></td><td style="text-align:center;">请确认是否打开初始网页</td><td style="text-align:center;"><code>false</code></td><td>自动打开默认浏览器且跳转到指定链接</td></tr></tbody></table><blockquote><p>🎨 初始物料 <strong>bruce-app init</strong> / <strong>bruce-app i</strong></p></blockquote><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">功能</th><th style="text-align:center;">默认</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>mateName</strong></td><td style="text-align:center;">请输入物料名称</td><td style="text-align:center;"><code>demo</code></td><td>只能由数字、小写字母或中划线组成且首末位字符只能为数字或小写字母</td></tr><tr><td style="text-align:center;"><strong>template</strong></td><td style="text-align:center;">请选择预设模板</td><td style="text-align:center;"><code>component</code></td><td>可选<code>component/layout/flow/view/page</code></td></tr></tbody></table><ul><li><code>template</code>配置提供<code>component组件</code>、<code>layout布局</code>、<code>flow流程</code>、<code>view视图</code>和<code>page页面</code>，根据<code>src/${template}s/${mateName}</code>拼接而成的路径生成对应文件</li></ul><blockquote><p>🌍 切换语言 <strong>bruce-app locale</strong> / <strong>bruce-app l</strong></p></blockquote><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">功能</th><th style="text-align:center;">默认</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>lang</strong></td><td style="text-align:center;">请选择本地语言</td><td style="text-align:center;"><code>简体中文</code></td><td>可选<code>简体中文/繁体中文/英文</code></td></tr></tbody></table><blockquote><p>🗑️ 删除缓存 <strong>bruce-app remove</strong> / <strong>bruce-app r</strong></p></blockquote><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">功能</th><th style="text-align:center;">默认</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>cache</strong></td><td style="text-align:center;">请选择废弃缓存</td><td style="text-align:center;"><code>[]</code></td><td>可选<code>dist/node_modules/package-lock.json/yarn.lock</code></td></tr></tbody></table><h2 id="命令参数" tabindex="-1"><a class="header-anchor" href="#命令参数" aria-hidden="true">#</a> 命令参数</h2><p>命令参数生成的配置会保存到终端内存中，当命令执行之后会被回收。</p><blockquote><p>📦 构建应用 <strong>bruce-app build</strong> / <strong>bruce-app b</strong></p></blockquote><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:center;">配置</th><th style="text-align:center;">格式</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>分析打包结果</strong></td><td style="text-align:center;"><code>-a, --analyze</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>压缩文件数据</strong></td><td style="text-align:center;"><code>-c, --compress</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>校验样式代码</strong></td><td style="text-align:center;"><code>-lc, --lintcss</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>校验脚本代码</strong></td><td style="text-align:center;"><code>-lj, --lintjs</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>环境模式</strong></td><td style="text-align:center;"><code>-m, --mode</code></td><td style="text-align:center;"><code>test/pre/prod</code></td><td>不设置则默认为<code>prod</code></td></tr><tr><td style="text-align:center;"><strong>哈希文件名称</strong></td><td style="text-align:center;"><code>-n, --named</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>代码垫片</strong></td><td style="text-align:center;"><code>-p, --polyfill</code></td><td style="text-align:center;"><code>es5/es6/custom/dynamic</code></td><td>不设置则默认为<code>es6</code></td></tr><tr><td style="text-align:center;"><strong>时化应用目录</strong></td><td style="text-align:center;"><code>-t, --timed</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr></tbody></table><ul><li>示例1：<code>bruce-app build --mode test --polyfill es5 --analyze --lintcss --lintjs</code></li><li>示例2：<code>bruce-app b -m pre -p dynamic -a -lc -lj</code></li></ul><blockquote><p>♾️ 创建应用 <strong>bruce-app create</strong> / <strong>bruce-app c</strong></p></blockquote><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:center;">配置</th><th style="text-align:center;">格式</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>开发框架</strong></td><td style="text-align:center;"><code>-f, --frame</code></td><td style="text-align:center;"><code>js/react</code></td><td>不设置则默认为<code>js</code></td></tr><tr><td style="text-align:center;"><strong>安装应用依赖</strong></td><td style="text-align:center;"><code>-i, --install</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>应用名称</strong></td><td style="text-align:center;"><code>-n, --name</code></td><td style="text-align:center;"><code>unknown</code></td><td>不设置则默认为<code>unknown</code></td></tr><tr><td style="text-align:center;"><strong>预设样式</strong></td><td style="text-align:center;"><code>-s, --style</code></td><td style="text-align:center;"><code>scss</code></td><td>不设置则默认为<code>scss</code></td></tr><tr><td style="text-align:center;"><strong>集成TypeScript</strong></td><td style="text-align:center;"><code>-ts, --typescript</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr></tbody></table><ul><li>示例1：<code>bruce-app create --name test-react-ts --frame react --style less -i -ts</code></li><li>示例2：<code>bruce-app c -n test-react -f react -s less -i</code></li></ul><blockquote><p>🕹️ 调试应用 <strong>bruce-app dev</strong> / <strong>bruce-app d</strong></p></blockquote><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:center;">配置</th><th style="text-align:center;">格式</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>开启证书服务</strong></td><td style="text-align:center;"><code>-e, --encrypt</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>校验样式代码</strong></td><td style="text-align:center;"><code>-lc, --lintcss</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>校验脚本代码</strong></td><td style="text-align:center;"><code>-lj, --lintjs</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>打开初始网页</strong></td><td style="text-align:center;"><code>-o, --open</code></td><td style="text-align:center;"><code>true</code></td><td>不设置则不生效</td></tr><tr><td style="text-align:center;"><strong>代码垫片</strong></td><td style="text-align:center;"><code>-p, --port</code></td><td style="text-align:center;"><code>9999</code></td><td>不设置则默认为<code>9999</code></td></tr></tbody></table><ul><li>示例1：<code>bruce-app dev --port 9876 --encrypt --lintcss --lintjs --open</code></li><li>示例2：<code>bruce-app d -p 9876 -e -lc -lj -o</code></li></ul><blockquote><p>🎨 初始物料 <strong>bruce-app init</strong> / <strong>bruce-app i</strong></p></blockquote><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:center;">配置</th><th style="text-align:center;">格式</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>代码垫片</strong></td><td style="text-align:center;"><code>-n, --name</code></td><td style="text-align:center;"><code>demo</code></td><td>不设置则默认为<code>demo</code></td></tr><tr><td style="text-align:center;"><strong>代码垫片</strong></td><td style="text-align:center;"><code>-t, --template</code></td><td style="text-align:center;"><code>component/layout/flow/view/page</code></td><td>不设置则默认为<code>9999</code></td></tr></tbody></table><ul><li>示例1：<code>bruce-app init --name navbar --template layout</code></li><li>示例2：<code>bruce-app i -n navbar -t layout</code></li></ul><blockquote><p>注意事项</p></blockquote><ul><li>如果<code>--opt [val]</code>的<code>val</code>为<code>false</code>，就不要增加这个配置</li><li>配置一定要输入完整且正确，格式为<code>--opt [val]</code>，不然会报错</li></ul><h2 id="文件配置" tabindex="-1"><a class="header-anchor" href="#文件配置" aria-hidden="true">#</a> 文件配置</h2><p>文件配置生成的配置会保存到配置文件中，会一直生效，除非修改文件配置。</p><p>配置文件使用<code>brucerc</code>命名，可选后缀为<code>js|json|ts|yaml</code>，请不要随意修改配置文件的名称。不对配置做动态处理建议使用<code>json/yaml</code>后缀，否则使用<code>js|ts</code>后缀。一般情况下，应用最终上线会区分<code>测试环境</code>、<code>预览环境</code>和<code>生产环境</code>，某些配置就要根据<code>mode</code>进行区分，这样只能使用<code>js|ts</code>后缀。</p>',36),d=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"选项"),t("th",{style:{"text-align":"center"}},"功能"),t("th",{style:{"text-align":"center"}},"类型"),t("th",{style:{"text-align":"center"}},"默认"),t("th",null,"备注")])],-1),u=t("td",{style:{"text-align":"center"}},[t("strong",null,"alias")],-1),k=t("td",{style:{"text-align":"center"}},"快捷方式",-1),g=t("td",{style:{"text-align":"center"}},[t("code",null,"Object")],-1),y=t("td",{style:{"text-align":"center"}},[t("code",null,"{}")],-1),b={href:"https://webpack.docschina.org/configuration/resolve#resolvealias",target:"_blank",rel:"noopener noreferrer"},v=t("td",{style:{"text-align":"center"}},[t("strong",null,"browsers")],-1),m=t("td",{style:{"text-align":"center"}},"兼容范围",-1),x=t("td",{style:{"text-align":"center"}},[t("code",null,"String[]")],-1),h=t("td",{style:{"text-align":"center"}},[t("code",null,"[]")],-1),q={href:"https://browsersl.ist",target:"_blank",rel:"noopener noreferrer"},f=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"buildError")]),t("td",{style:{"text-align":"center"}},"构建失败回调"),t("td",{style:{"text-align":"center"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"center"}},[t("code",null,"null")]),t("td",null,[n("形式为"),t("code",null,"({dist,mode})=>{}"),n("，"),t("code",null,"dist"),n("为输出路径，"),t("code",null,"mode"),n("为环境模式")])],-1),_=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"buildSuccess")]),t("td",{style:{"text-align":"center"}},"构建成功回调"),t("td",{style:{"text-align":"center"}},[t("code",null,"Function")]),t("td",{style:{"text-align":"center"}},[t("code",null,"null")]),t("td",null,[n("形式为"),t("code",null,"({dist,mode})=>{}"),n("，"),t("code",null,"dist"),n("为输出路径，"),t("code",null,"mode"),n("为环境模式")])],-1),w=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"copyFiles")]),t("td",{style:{"text-align":"center"}},"复制文件"),t("td",{style:{"text-align":"center"}},[t("code",null,"Array/Function")]),t("td",{style:{"text-align":"center"}},[t("code",null,"[]")]),t("td",null,[n("函数形式为"),t("code",null,"(mode)=>[]"),n("，数组元素由"),t("code",null,"from"),n("和"),t("code",null,"to"),n("组成")])],-1),j=t("td",{style:{"text-align":"center"}},[t("strong",null,"eslintIgnores")],-1),S=t("td",{style:{"text-align":"center"}},"Eslint忽略路径",-1),z=t("td",{style:{"text-align":"center"}},[t("code",null,"String[]")],-1),E=t("td",{style:{"text-align":"center"}},[t("code",null,"[]")],-1),T={href:"https://eslint.org/docs/latest/use/configure/ignore",target:"_blank",rel:"noopener noreferrer"},A=t("td",{style:{"text-align":"center"}},[t("strong",null,"eslintRules")],-1),F=t("td",{style:{"text-align":"center"}},"Eslint校验规则",-1),C=t("td",{style:{"text-align":"center"}},[t("code",null,"Object")],-1),P=t("td",{style:{"text-align":"center"}},[t("code",null,"{}")],-1),I={href:"https://eslint.org/docs/latest/use/configure/rules",target:"_blank",rel:"noopener noreferrer"},N={href:"https://eslint.org/docs/latest/rules",target:"_blank",rel:"noopener noreferrer"},H={href:"https://typescript-eslint.io/rules",target:"_blank",rel:"noopener noreferrer"},O=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"frame")]),t("td",{style:{"text-align":"center"}},"开发框架"),t("td",{style:{"text-align":"center"}},[t("code",null,"String")]),t("td",{style:{"text-align":"center"}},[t("code",null,"js")]),t("td",null,[n("可选"),t("code",null,"js/react"),n("，由命令生成，请不要做任何修改")])],-1),R=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"linkAssets")]),t("td",{style:{"text-align":"center"}},"链接资源"),t("td",{style:{"text-align":"center"}},[t("code",null,"Array")]),t("td",{style:{"text-align":"center"}},[t("code",null,"[]")]),t("td",null,[n("在HTML的"),t("code",null,"<head>"),n("中插入链接资源，数组元素由"),t("code",null,"<link>"),n("的属性组成")])],-1),V=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"openPages")]),t("td",{style:{"text-align":"center"}},"打开网页"),t("td",{style:{"text-align":"center"}},[t("code",null,"String[]")]),t("td",{style:{"text-align":"center"}},[t("code",null,"[]")]),t("td",null,[n("默认浏览器在"),t("code",null,"开发环境"),n("准备之后自动打开数组中所有网页")])],-1),$=t("td",{style:{"text-align":"center"}},[t("strong",null,"proxy")],-1),B=t("td",{style:{"text-align":"center"}},"接口代理",-1),L=t("td",{style:{"text-align":"center"}},[t("code",null,"Object")],-1),D=t("td",{style:{"text-align":"center"}},[t("code",null,"{}")],-1),M={href:"https://webpack.js.org/configuration/dev-server/#devserverproxy",target:"_blank",rel:"noopener noreferrer"},J=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"proxyHost")]),t("td",{style:{"text-align":"center"}},"代理域名"),t("td",{style:{"text-align":"center"}},[t("code",null,"String")]),t("td",{style:{"text-align":"center"}},[t("code",null,'""')]),t("td",null,[n("默认浏览器在"),t("code",null,"开发环境"),n("中自动将当前域名替换为代理域名")])],-1),U=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"publicPath")]),t("td",{style:{"text-align":"center"}},"公共路径"),t("td",{style:{"text-align":"center"}},[t("code",null,"String/Function")]),t("td",{style:{"text-align":"center"}},[t("code",null,'""')]),t("td",null,[n("插入资源文件前缀，函数形式为"),t("code",null,'mode=>""')])],-1),X=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"scriptAssets")]),t("td",{style:{"text-align":"center"}},"脚本资源"),t("td",{style:{"text-align":"center"}},[t("code",null,"Array")]),t("td",{style:{"text-align":"center"}},[t("code",null,"[]")]),t("td",null,[n("在HTML的"),t("code",null,"<body>"),n("中插入脚本资源，数组元素由"),t("code",null,"<script>"),n("的属性组成")])],-1),G=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"style")]),t("td",{style:{"text-align":"center"}},"预设样式"),t("td",{style:{"text-align":"center"}},[t("code",null,"String")]),t("td",{style:{"text-align":"center"}},[t("code",null,"scss")]),t("td",null,[n("可选"),t("code",null,"scss/less"),n("，由命令生成，请不要做任何修改")])],-1),K=t("td",{style:{"text-align":"center"}},[t("strong",null,"stylelintIgnores")],-1),Q=t("td",{style:{"text-align":"center"}},"Stylelint忽略路径",-1),W=t("td",{style:{"text-align":"center"}},[t("code",null,"String[]")],-1),Y=t("td",{style:{"text-align":"center"}},[t("code",null,"[]")],-1),Z={href:"https://stylelint.io/user-guide/configure#ignorefiles",target:"_blank",rel:"noopener noreferrer"},tt=t("td",{style:{"text-align":"center"}},[t("strong",null,"stylelintRules")],-1),nt=t("td",{style:{"text-align":"center"}},"Stylelint校验规则",-1),st=t("td",{style:{"text-align":"center"}},[t("code",null,"Object")],-1),et=t("td",{style:{"text-align":"center"}},[t("code",null,"{}")],-1),at={href:"https://stylelint.io/user-guide/configure/#rules",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://stylelint.io/user-guide/rules",target:"_blank",rel:"noopener noreferrer"},lt=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"transpileDeps")]),t("td",{style:{"text-align":"center"}},"转译依赖"),t("td",{style:{"text-align":"center"}},[t("code",null,"Array")]),t("td",{style:{"text-align":"center"}},[t("code",null,"[]")]),t("td",null,[n("转译"),t("code",null,"node_modules"),n("中没有输出ES5的模块")])],-1),ct=t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"useTs")]),t("td",{style:{"text-align":"center"}},"集成TypeScript"),t("td",{style:{"text-align":"center"}},[t("code",null,"Boolean")]),t("td",{style:{"text-align":"center"}},[t("code",null,"false")]),t("td",null,[n("可选"),t("code",null,"true/false"),n("，由命令生成，请不要做任何修改")])],-1),pt=a(`<blockquote><p>注意事项</p></blockquote><ul><li>如果配置文件使用<code>js|ts</code>后缀，必须使用ESM规范，导出形式为<code>export default {}</code></li><li>如果配置文件的属性是<code>null/&quot;&quot;/[]/{}</code>其中之一，会自动过滤并使用内置配置的默认值</li><li><code>copyFiles</code>数组元素的<code>from</code>表示源文件路径，<code>to</code>表示源文件复制之后的路径，<code>from</code>必须以<code>src/xxx/yyy.js</code>的形式书写，<code>to</code>必须以<code>xxx</code>的形式书写，在复制文件时进程会为<code>to</code>自动加上<code>dist/</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">swiper</span><span class="token operator">:</span> <span class="token string">&quot;swiper/dist/js/swiper.js&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">browsers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;&gt; 0.2%&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;last 2 version&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;not dead&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token function">buildError</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dist <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> mode <span class="token operator">=</span> <span class="token string">&quot;prod&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;失败&quot;</span><span class="token punctuation">,</span> dist<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function">buildSuccess</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dist <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> mode <span class="token operator">=</span> <span class="token string">&quot;prod&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;成功&quot;</span><span class="token punctuation">,</span> dist<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">copyFiles</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span> <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">&quot;src/manifest.json&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">to</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">&quot;src/sw.js&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">to</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">eslintIgnores</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;src/components/*&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">eslintRules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;space-before-function-paren&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">frame</span><span class="token operator">:</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
	<span class="token function-variable function">linkAssets</span><span class="token operator">:</span> <span class="token parameter">mode</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span> <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mode <span class="token operator">===</span> <span class="token string">&quot;test&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;/test&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/manifest.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token literal-property property">rel</span><span class="token operator">:</span> <span class="token string">&quot;manifest&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&quot;https://static.yangzw.vip/img/logo-256.png&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">rel</span><span class="token operator">:</span> <span class="token string">&quot;apple-touch-icon&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&quot;https://static.yangzw.vip/css/reset.css&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">rel</span><span class="token operator">:</span> <span class="token string">&quot;stylesheet&quot;</span> <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">openPages</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;about&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;contact&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;/api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
			<span class="token literal-property property">secure</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			<span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;https://yangzw.vip&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">proxyHost</span><span class="token operator">:</span> <span class="token string">&quot;https://yangzw.vip&quot;</span><span class="token punctuation">,</span>
	<span class="token function-variable function">publicPath</span><span class="token operator">:</span> <span class="token parameter">mode</span> <span class="token operator">=&gt;</span> mode <span class="token operator">===</span> <span class="token string">&quot;test&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;/test/&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">scriptAssets</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;https://static.yangzw.vip/js/stats.js&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&quot;scss&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">stylelintIgnores</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;src/assets/css/*&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">stylelintRules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;color-hex-case&quot;</span><span class="token operator">:</span> <span class="token string">&quot;upper&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">transpileDeps</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;recoil&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;ssr-window&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;swiper&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">useTs</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用TS编码，可以安装<code>@yangzw/bruce-type</code>提供类型定义。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> readFileSync<span class="token punctuation">,</span> writeFileSync <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> normalize <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@yangzw/bruce-type&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	alias<span class="token operator">:</span> <span class="token punctuation">{</span>
		swiper<span class="token operator">:</span> <span class="token string">&quot;swiper/dist/js/swiper.js&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	browsers<span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;&gt; 0.2%&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;last 2 version&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;not dead&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token function">buildError</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dist <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> mode <span class="token operator">=</span> <span class="token string">&quot;prod&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;失败&quot;</span><span class="token punctuation">,</span> dist<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function">buildSuccess</span><span class="token punctuation">(</span><span class="token punctuation">{</span> dist <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> mode <span class="token operator">=</span> <span class="token string">&quot;prod&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> manifestPath <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dist<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/manifest.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">const</span> manifestContent <span class="token operator">=</span> <span class="token function">readFileSync</span><span class="token punctuation">(</span>manifestPath<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">const</span> manifestContentX <span class="token operator">=</span> manifestContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;user?app=pwa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ngp/user?app=pwa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">writeFileSync</span><span class="token punctuation">(</span>manifestPath<span class="token punctuation">,</span> manifestContentX<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	copyFiles<span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span> from<span class="token operator">:</span> <span class="token string">&quot;src/manifest.json&quot;</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> from<span class="token operator">:</span> <span class="token string">&quot;src/sw.js&quot;</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	eslintIgnores<span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;src/components/*&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	eslintRules<span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;space-before-function-paren&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	frame<span class="token operator">:</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
	<span class="token function-variable function">linkAssets</span><span class="token operator">:</span> mode <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span> href<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mode <span class="token operator">===</span> <span class="token string">&quot;test&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;/test&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/manifest.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> rel<span class="token operator">:</span> <span class="token string">&quot;manifest&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> href<span class="token operator">:</span> <span class="token string">&quot;https://static.yangzw.vip/img/logo-256.png&quot;</span><span class="token punctuation">,</span> rel<span class="token operator">:</span> <span class="token string">&quot;apple-touch-icon&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span> href<span class="token operator">:</span> <span class="token string">&quot;https://static.yangzw.vip/css/reset.css&quot;</span><span class="token punctuation">,</span> rel<span class="token operator">:</span> <span class="token string">&quot;stylesheet&quot;</span> <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	openPages<span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;about&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;contact&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	proxy<span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;/api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
			secure<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			target<span class="token operator">:</span> <span class="token string">&quot;https://yangzw.vip&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	proxyHost<span class="token operator">:</span> <span class="token string">&quot;https://yangzw.vip&quot;</span><span class="token punctuation">,</span>
	<span class="token function-variable function">publicPath</span><span class="token operator">:</span> mode <span class="token operator">=&gt;</span> mode <span class="token operator">===</span> <span class="token string">&quot;test&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;/test/&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
	scriptAssets<span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;https://static.yangzw.vip/js/stats.js&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	style<span class="token operator">:</span> <span class="token string">&quot;scss&quot;</span><span class="token punctuation">,</span>
	stylelintIgnores<span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;src/assets/css/*&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	stylelintRules<span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;color-hex-case&quot;</span><span class="token operator">:</span> <span class="token string">&quot;upper&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	transpileDeps<span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;recoil&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;ssr-window&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;swiper&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	useTs<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function rt(it,dt){const s=l("ExternalLinkIcon");return c(),p("div",null,[i,t("table",null,[d,t("tbody",null,[t("tr",null,[u,k,g,y,t("td",null,[n("配置详情请查看"),t("a",b,[n("webpack->resolve->alias"),e(s)])])]),t("tr",null,[v,m,x,h,t("td",null,[n("配置详情请查看"),t("a",q,[n("browserslist"),e(s)])])]),f,_,w,t("tr",null,[j,S,z,E,t("td",null,[n("配置详情请查看"),t("a",T,[n("eslint->ignore"),e(s)])])]),t("tr",null,[A,F,C,P,t("td",null,[n("配置详情请查看"),t("a",I,[n("eslint->rule"),e(s)]),n("、"),t("a",N,[n("es-rules"),e(s)]),n("和"),t("a",H,[n("ts-rules"),e(s)])])]),O,R,V,t("tr",null,[$,B,L,D,t("td",null,[n("配置详情请查看"),t("a",M,[n("webpack-dev-server->proxy"),e(s)])])]),J,U,X,G,t("tr",null,[K,Q,W,Y,t("td",null,[n("配置详情请查看"),t("a",Z,[n("stylelint->ignore"),e(s)])])]),t("tr",null,[tt,nt,st,et,t("td",null,[n("配置详情请查看"),t("a",at,[n("stylelint>rule"),e(s)]),n("和"),t("a",ot,[n("css-rules"),e(s)])])]),lt,ct])]),pt])}const gt=o(r,[["render",rt],["__file","config.html.vue"]]);export{gt as default};
